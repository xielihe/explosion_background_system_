# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-11-21 14:12
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('basic', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='devEvi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evidenceName', models.CharField(max_length=30, verbose_name='物证名称')),
                ('caseName', models.CharField(max_length=30, verbose_name='案件名称')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('picUrl', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/devSample/', verbose_name='组件外观图像路径')),
                ('Factory', models.CharField(blank=True, max_length=100, null=True, verbose_name='物证厂家')),
                ('Model', models.CharField(blank=True, max_length=30, null=True, verbose_name='物证型号')),
                ('Logo', models.CharField(blank=True, max_length=100, null=True, verbose_name='物证商标')),
                ('Color', models.CharField(blank=True, max_length=10, null=True, verbose_name='物证颜色')),
                ('Material', models.CharField(blank=True, max_length=10, null=True, verbose_name='物证材质')),
                ('Shape', models.CharField(blank=True, max_length=10, null=True, verbose_name='物证形状')),
                ('thickness', models.CharField(blank=True, max_length=50, null=True, verbose_name='厚度（边角）')),
                ('note', models.CharField(blank=True, max_length=500, null=True, verbose_name='备注')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置物证基本信息表',
                'verbose_name_plural': '爆炸装置物证基本信息表',
            },
        ),
        migrations.CreateModel(
            name='devEviFTIR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('devEvi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devEviFTIR', to='evi.devEvi', verbose_name='对应的爆炸装置物证')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置物证FTIR检测表',
                'verbose_name_plural': '爆炸装置物证FTIR检测表',
            },
        ),
        migrations.CreateModel(
            name='devEviFTIRTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('devEviId', models.IntegerField(blank=True, null=True, verbose_name='所涉及的炸药物证')),
                ('txtURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/ddevEviFTIRTestFile/', verbose_name='录入TXT文档路径')),
                ('txtHandledURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='处理过的TXT文档路径')),
                ('devEviFTIR', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devEviFTIRTestFile', to='evi.devEviFTIR', verbose_name='对应的FTIR检测')),
            ],
            options={
                'verbose_name': '爆炸装置物证FTIR检测实验文件表',
                'verbose_name_plural': '爆炸装置物证FTIR检测实验文件表',
            },
        ),
        migrations.CreateModel(
            name='devEviRaman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('devEvi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devEviRaman', to='evi.devEvi', verbose_name='对应的爆炸装置物证')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置物证Raman检测表',
                'verbose_name_plural': '爆炸装置物证Raman检测表',
            },
        ),
        migrations.CreateModel(
            name='devEviRamanTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('devEviId', models.IntegerField(blank=True, null=True, verbose_name='所涉及的炸药物证')),
                ('txtURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/devEviRamanTestFile/', verbose_name='录入TXT文档路径')),
                ('txtHandledURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='处理过的TXT文档路径')),
                ('devEviRaman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devEviRamanTestFile', to='evi.devEviRaman', verbose_name='对应的Raman检测')),
            ],
            options={
                'verbose_name': '爆炸装置物证Raman检测实验文件表',
                'verbose_name_plural': '爆炸装置物证Raman检测实验文件表',
            },
        ),
        migrations.CreateModel(
            name='devEviXRF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('devEvi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devEviXRF', to='evi.devEvi', verbose_name='对应的爆炸装置物证')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置物证XRF检测表',
                'verbose_name_plural': '爆炸装置物证XRF检测表',
            },
        ),
        migrations.CreateModel(
            name='devEviXRFTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('devEviId', models.IntegerField(blank=True, null=True, verbose_name='所涉及的炸药物证')),
                ('excelURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/devEviXRFTestFile/', verbose_name='录入excel文档路径')),
                ('miningList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Mining元素列表')),
                ('pnpList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plastics Non PVC元素列表')),
                ('ppList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plastics PVC元素列表')),
                ('gmList', models.CharField(blank=True, max_length=300, null=True, verbose_name='General Metals元素列表')),
                ('soilList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Soil元素列表')),
                ('tagList', models.CharField(blank=True, max_length=300, null=True, verbose_name='TestAll Geo元素列表')),
                ('devEviXRF', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devEviXRFTestFile', to='evi.devEviXRF', verbose_name='对应的XRF检测')),
            ],
            options={
                'verbose_name': '爆炸装置物证XRF检测实验文件表',
                'verbose_name_plural': '爆炸装置物证XRF检测实验文件表',
            },
        ),
        migrations.CreateModel(
            name='devShapeEvi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isCircuit', models.BooleanField(default=False, verbose_name='是否是元器件匹配')),
                ('isFirst', models.BooleanField(default=True, verbose_name='是否是第一次分割')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('rectCoordi', models.CharField(blank=True, max_length=100, null=True, verbose_name='矩形框坐标（4个）')),
                ('proCoordi', models.CharField(blank=True, max_length=400, null=True, verbose_name='前景颜色点坐标')),
                ('backCoordi', models.CharField(blank=True, max_length=400, null=True, verbose_name='背景颜色点坐标')),
                ('boardCoordi', models.CharField(blank=True, max_length=400, null=True, verbose_name='主板颜色点坐标')),
                ('blackWhiteUrl', models.ImageField(blank=True, null=True, upload_to='', verbose_name='黑白图像路径')),
                ('interColorUrl', models.ImageField(blank=True, null=True, upload_to='', verbose_name='中间彩色图像路径')),
                ('middleResultUrl', models.FileField(blank=True, null=True, upload_to='', verbose_name='第一次文件路径')),
                ('compCheckCoordi', models.CharField(blank=True, max_length=400, null=True, verbose_name='元器件点坐标（校验）')),
                ('boardCheckCoordi', models.CharField(blank=True, max_length=400, null=True, verbose_name='主板像素坐标（校验）')),
                ('featureUrl', models.FileField(blank=True, null=True, upload_to='', verbose_name='特征文件路径')),
                ('resultPicUrl', models.ImageField(blank=True, null=True, upload_to='', verbose_name='结果图像形式路径')),
                ('resultFileUrl', models.FileField(blank=True, null=True, upload_to='', verbose_name='结果文件形式路径')),
                ('originalUrl', models.ImageField(blank=True, null=True, upload_to='image/devShapeEvi/original/', verbose_name='原始图像文件路径')),
                ('originalResolution', models.CharField(blank=True, max_length=30, null=True, verbose_name='原始图像采集分辨率')),
                ('nomUrl', models.ImageField(blank=True, null=True, upload_to='', verbose_name='归一化图像文件路径')),
                ('nomResolution', models.CharField(blank=True, max_length=30, null=True, verbose_name='归一化图像分辨率')),
                ('note', models.CharField(blank=True, max_length=200, null=True, verbose_name='备注')),
                ('devEvi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devShapeEvi', to='evi.devEvi', verbose_name='所属物证')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置案件物证形态表',
                'verbose_name_plural': '爆炸装置案件物证形态表',
            },
        ),
        migrations.CreateModel(
            name='exploEvi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evidenceName', models.CharField(max_length=30, verbose_name='物证名称')),
                ('caseName', models.CharField(default='未知案件', max_length=30, verbose_name='案件名称')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('picUrl', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/exploEvi/', verbose_name='炸药物证外观图像路径')),
                ('note', models.CharField(blank=True, max_length=200, null=True, verbose_name='备注')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '炸药及原材料物证基本信息表',
                'verbose_name_plural': '炸药及原材料物证基本信息表',
            },
        ),
        migrations.CreateModel(
            name='exploEviFTIR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('exploEvi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploEviFTIR', to='evi.exploEvi', verbose_name='对应的炸药物证')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '炸药及原材料物证FTIR检测表',
                'verbose_name_plural': '炸药及原材料物证FTIR检测表',
            },
        ),
        migrations.CreateModel(
            name='exploEviFTIRTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exploEviId', models.IntegerField(blank=True, null=True, verbose_name='所涉及的炸药物证')),
                ('txtURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/exploEviFTIRTestFile/', verbose_name='录入TXT文档路径')),
                ('txtHandledURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='处理过的TXT文档路径')),
                ('exploEviFTIR', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploEviFTIRTestFile', to='evi.exploEviFTIR', verbose_name='对应的FTIR检测')),
            ],
            options={
                'verbose_name': '炸药及原材料物证FTIR检测实验文件表',
                'verbose_name_plural': '炸药及原材料物证FTIR检测实验文件表',
            },
        ),
        migrations.CreateModel(
            name='exploEviGCMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('exploEvi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploEviGCMS', to='evi.exploEvi', verbose_name='对应的炸药物证')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '炸药及原材料物证GC-MS检测表',
                'verbose_name_plural': '炸药及原材料物证GC-MS检测表',
            },
        ),
        migrations.CreateModel(
            name='exploEviGCMSTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exploEviId', models.IntegerField(blank=True, null=True, verbose_name='所涉及的炸药物证')),
                ('type', models.CharField(default='TIC', max_length=20, verbose_name='类型（TIC。。。）')),
                ('txtURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/exploEviGCMSTestFile/', verbose_name='录入TXT文档路径')),
                ('txtHandledURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='处理过的TXT文档路径')),
                ('exploEviGCMS', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploEviGCMSTestFile', to='evi.exploEviGCMS', verbose_name='对应的GC-MS检测')),
            ],
            options={
                'verbose_name': '炸药及原材料物证GC-MS检测实验文件表',
                'verbose_name_plural': '炸药及原材料物证GC-MS检测实验文件表',
            },
        ),
        migrations.CreateModel(
            name='exploEviRaman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('exploEvi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploEviRaman', to='evi.exploEvi', verbose_name='对应的炸药物证')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '炸药及原材料物证Raman检测表',
                'verbose_name_plural': '炸药及原材料物证Raman检测表',
            },
        ),
        migrations.CreateModel(
            name='exploEviRamanTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exploEviId', models.IntegerField(blank=True, null=True, verbose_name='所涉及的炸药物证')),
                ('txtURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/exploEviRamanTestFile/', verbose_name='录入TXT文档路径')),
                ('txtHandledURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='处理过的TXT文档路径')),
                ('exploEviRaman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploEviRamanTestFile', to='evi.exploEviRaman', verbose_name='对应的Raman检测')),
            ],
            options={
                'verbose_name': '炸药及原材料物证Raman检测实验文件表',
                'verbose_name_plural': '炸药及原材料物证Raman检测实验文件表',
            },
        ),
        migrations.CreateModel(
            name='exploEviXRD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('exploEvi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploEviXRD', to='evi.exploEvi', verbose_name='对应的炸药样本')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '炸药及原材料物证XRD检测表',
                'verbose_name_plural': '炸药及原材料物证XRD检测表',
            },
        ),
        migrations.CreateModel(
            name='exploEviXRDTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exploEviId', models.IntegerField(blank=True, null=True, verbose_name='所涉及的炸药物证')),
                ('txtURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/exploEviXRDTestFile/', verbose_name='录入TXT文档路径')),
                ('txtHandledURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='处理过的TXT文档路径')),
                ('exploEviXRD', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploEviXRDTestFile', to='evi.exploEviXRD', verbose_name='对应的XRD检测')),
            ],
            options={
                'verbose_name': '炸药及原材料物证XRD检测实验文件表',
                'verbose_name_plural': '炸药及原材料物证XRD检测实验文件表',
            },
        ),
        migrations.CreateModel(
            name='exploEviXRF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('exploEvi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploEviXRF', to='evi.exploEvi', verbose_name='对应的炸药物证')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '炸药及原材料物证XRF检测表',
                'verbose_name_plural': '炸药及原材料物证XRF检测表',
            },
        ),
        migrations.CreateModel(
            name='exploEviXRFTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exploEviId', models.IntegerField(blank=True, null=True, verbose_name='所涉及的炸药物证')),
                ('excelURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/exploEviXRFTestFile/', verbose_name='录入excel文档路径')),
                ('miningList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Mining元素列表')),
                ('pnpList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plastics Non PVC元素列表')),
                ('ppList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plastics PVC元素列表')),
                ('gmList', models.CharField(blank=True, max_length=300, null=True, verbose_name='General Metals元素列表')),
                ('soilList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Soil元素列表')),
                ('tagList', models.CharField(blank=True, max_length=300, null=True, verbose_name='TestAll Geo元素列表')),
                ('exploEviXRF', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploEviXRFTestFile', to='evi.exploEviXRF', verbose_name='对应的XRF检测')),
            ],
            options={
                'verbose_name': '炸药及原材料物证XRF检测实验文件表',
                'verbose_name_plural': '炸药及原材料物证XRF检测实验文件表',
            },
        ),
        migrations.CreateModel(
            name='logoImgEvi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('eviType', models.IntegerField(choices=[(1, '外壳'), (2, '零件'), (3, '电路板'), (4, 'Logo')], default=4, help_text='零件类型（1-4，外壳，零件，电路板，Logo）', verbose_name='零件类型（1-4，外壳，零件，电路板，Logo）')),
                ('rectCoordi', models.CharField(blank=True, max_length=50, null=True, verbose_name='矩形框坐标（4个）')),
                ('fgCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='前景颜色点坐标')),
                ('bgCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='背景颜色点坐标')),
                ('boardCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='主板颜色点坐标')),
                ('markImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='', verbose_name='PCB区域标记图像文件路径 ')),
                ('compCheckCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='元器件点坐标（校验）')),
                ('boardCheckCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='主板像素坐标（校验）')),
                ('featureUrl', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='特征文件路径')),
                ('srcImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/logoImgEvi/original/', verbose_name='原始图像文件路径')),
                ('sResolution', models.IntegerField(blank=True, null=True, verbose_name='原始图像采集分辨率')),
                ('norImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/logoImgEvi/nom/', verbose_name='归一化图像文件路径')),
                ('nResolution', models.IntegerField(blank=True, null=True, verbose_name='归一化图像分辨率')),
                ('note', models.CharField(blank=True, max_length=500, null=True, verbose_name='备注')),
                ('devEvi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logoImgEvi', to='evi.devEvi', verbose_name='所属物证')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置物证商标Logo图像表',
                'verbose_name_plural': '爆炸装置物证商标Logo图像表',
            },
        ),
        migrations.CreateModel(
            name='oPartImgEvi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('eviType', models.IntegerField(choices=[(1, '外壳'), (2, '零件'), (3, '电路板'), (4, 'Logo')], default=1, help_text='物证类型（1-4，外壳，零件，电路板，Logo）', verbose_name='物证类型（1-4，外壳，零件，电路板，Logo）')),
                ('eviSide', models.IntegerField(choices=[(1, '正面'), (2, '反面'), (3, '3面'), (4, '4面'), (5, '5面'), (6, '6面')], default=1, help_text='物证是哪个面（1-6；1为正面，2为反面）', verbose_name='物证是哪个面（1-6；1为正面，2为反面）')),
                ('rectCoordi', models.CharField(blank=True, max_length=50, null=True, verbose_name='矩形框坐标（4个）')),
                ('fgCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='前景颜色点坐标')),
                ('bgCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='背景颜色点坐标')),
                ('boardCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='主板颜色点坐标')),
                ('markImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='', verbose_name='PCB区域标记图像文件路径 ')),
                ('compCheckCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='元器件点坐标（校验）')),
                ('boardCheckCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='主板像素坐标（校验）')),
                ('featureUrl', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='特征文件路径')),
                ('srcImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/oPartImgEvi/original/', verbose_name='原始图像文件路径')),
                ('sResolution', models.IntegerField(blank=True, null=True, verbose_name='原始图像采集分辨率')),
                ('norImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/oPartImgEvi/nom/', verbose_name='归一化图像文件路径')),
                ('nResolution', models.IntegerField(blank=True, null=True, verbose_name='归一化图像分辨率')),
                ('note', models.CharField(blank=True, max_length=500, null=True, verbose_name='备注')),
                ('devEvi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oPartImgEvi', to='evi.devEvi', verbose_name='所属物证')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置物证其它零件图像（也包括组件外壳）表',
                'verbose_name_plural': '爆炸装置物证其它零件图像（也包括组件外壳）表',
            },
        ),
        migrations.CreateModel(
            name='PCBImgEvi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('eviType', models.IntegerField(choices=[(1, '外壳'), (2, '零件'), (3, '电路板'), (4, 'Logo')], default=3, help_text='物证类型（1-4，外壳，零件，电路板，Logo）', verbose_name='物证类型（1-4，外壳，零件，电路板，Logo）')),
                ('sampleSide', models.IntegerField(choices=[(1, '正面'), (2, '反面')], default=1, help_text='电路板是哪个面（1-2；1为正面）', verbose_name='电路板是哪个面（1-2；1为正面）')),
                ('rectCoordi', models.CharField(blank=True, max_length=50, null=True, verbose_name='矩形框坐标（4个）')),
                ('fgCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='前景颜色点坐标')),
                ('bgCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='背景颜色点坐标')),
                ('boardCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='主板颜色点坐标')),
                ('markImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='', verbose_name='PCB区域标记图像文件路径 ')),
                ('compCheckCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='元器件点坐标（校验）')),
                ('boardCheckCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='主板像素坐标（校验）')),
                ('featureUrl', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='特征文件路径')),
                ('isFirst', models.BooleanField(default=True, verbose_name='是否是第一次分割')),
                ('componentSegURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='元器件分割结果文件路径')),
                ('srcImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/devShapeEvi/original/', verbose_name='原始图像文件路径')),
                ('sResolution', models.IntegerField(blank=True, null=True, verbose_name='原始图像采集分辨率')),
                ('norImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/devShapeEvi/nom/', verbose_name='归一化图像文件路径')),
                ('nResolution', models.IntegerField(blank=True, null=True, verbose_name='归一化图像分辨率')),
                ('note', models.CharField(blank=True, max_length=500, null=True, verbose_name='备注')),
                ('devEvi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PCBImgEvi', to='evi.devEvi', verbose_name='所属物证')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置物证电路板图像表',
                'verbose_name_plural': '爆炸装置物证电路板图像表',
            },
        ),
    ]
