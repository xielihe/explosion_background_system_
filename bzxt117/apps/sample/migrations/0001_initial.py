# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-11-21 14:12
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('basic', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='devPartRamanTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txtURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/devPartRamanTestFile/', verbose_name='录入TXT文档路径')),
                ('txtHandledURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='处理过的TXT文档路径')),
            ],
            options={
                'verbose_name': '爆炸装置关键组件样本零件Raman检测实验文件表  ',
                'verbose_name_plural': '爆炸装置关键组件样本零件Raman检测实验文件表  ',
            },
        ),
        migrations.CreateModel(
            name='devPartSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sname', models.CharField(max_length=30, verbose_name='零件名称')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('Origin', models.CharField(blank=True, max_length=100, null=True, verbose_name='零件产地')),
                ('Factory', models.CharField(blank=True, max_length=100, null=True, verbose_name='零件厂家')),
                ('Model', models.CharField(blank=True, max_length=30, null=True, verbose_name='零件型号')),
                ('Logo', models.CharField(blank=True, max_length=100, null=True, verbose_name='零件商标')),
                ('function', models.CharField(blank=True, max_length=100, null=True, verbose_name='零件功能')),
                ('Color', models.CharField(blank=True, max_length=10, null=True, verbose_name='零件颜色')),
                ('Material', models.CharField(blank=True, max_length=10, null=True, verbose_name='零件材质')),
                ('Shape', models.CharField(blank=True, max_length=10, null=True, verbose_name='零件形状')),
                ('thickness', models.CharField(blank=True, max_length=50, null=True, verbose_name='厚度（边角）')),
                ('picUrl', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/devPartSample/', verbose_name='零件外观图像路径')),
                ('note', models.CharField(blank=True, max_length=500, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '爆炸装置关键组件的零件（包括电路板）样本基本信息表',
                'verbose_name_plural': '爆炸装置关键组件的零件（包括电路板）样本基本信息表',
            },
        ),
        migrations.CreateModel(
            name='devPartSampleFTIR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('devPartSample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devPartSampleFTIR', to='sample.devPartSample', verbose_name='对应的爆炸装置零件样本')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置关键组件样本零件FTIR检测表',
                'verbose_name_plural': '爆炸装置关键组件样本零件FTIR检测表',
            },
        ),
        migrations.CreateModel(
            name='devPartSampleFTIRTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txtURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/devPartSampleFTIRTestFile/', verbose_name='录入TXT文档路径')),
                ('txtHandledURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='处理过的TXT文档路径')),
                ('devPartSampleFTIR', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devPartSampleFTIRTestFile', to='sample.devPartSampleFTIR', verbose_name='对应的FTIR检测')),
            ],
            options={
                'verbose_name': '爆炸装置关键组件样本零件FTIR检测实验文件表',
                'verbose_name_plural': '爆炸装置关键组件样本零件FTIR检测实验文件表',
            },
        ),
        migrations.CreateModel(
            name='devPartSampleRaman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('devPartSample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devPartSampleRaman', to='sample.devPartSample', verbose_name='对应的爆炸装置零件样本')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置关键组件样本零件Raman检测表',
                'verbose_name_plural': '爆炸装置关键组件样本零件Raman检测表',
            },
        ),
        migrations.CreateModel(
            name='devPartSampleXRF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('devPartSample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devPartSampleXRF', to='sample.devPartSample', verbose_name='对应的爆炸装置零件样本')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置关键组件样本零件XRF检测表',
                'verbose_name_plural': '爆炸装置关键组件样本零件XRF检测表',
            },
        ),
        migrations.CreateModel(
            name='devPartSampleXRFTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('excelURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/devPartSampleXRFTestFile/', verbose_name='录入excel文档路径')),
                ('miningList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Mining元素列表')),
                ('pnpList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plastics Non PVC元素列表')),
                ('ppList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plastics PVC元素列表')),
                ('gmList', models.CharField(blank=True, max_length=300, null=True, verbose_name='General Metals元素列表')),
                ('soilList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Soil元素列表')),
                ('tagList', models.CharField(blank=True, max_length=300, null=True, verbose_name='TestAll Geo元素列表')),
                ('devPartSampleXRF', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devPartSampleXRFTestFile', to='sample.devPartSampleXRF', verbose_name='对应的XRF检测')),
            ],
            options={
                'verbose_name': '爆炸装置关键组件样本零件XRF检测实验文件表',
                'verbose_name_plural': '爆炸装置关键组件样本零件XRF检测实验文件表',
            },
        ),
        migrations.CreateModel(
            name='devSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sname', models.CharField(max_length=30, verbose_name='组件名称')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('Type', models.IntegerField(choices=[(1, '能源'), (2, '控制系统'), (3, '连接系统'), (4, '起爆装置'), (5, '包装物')], default=1, help_text='组件类型分组（1-5，能源、控制系统、连接系统、起爆系统、包装物）', verbose_name='组件类型分组（1-5，能源、控制系统、连接系统、起爆系统、包装物）')),
                ('Origin', models.CharField(blank=True, max_length=100, null=True, verbose_name='组件产地')),
                ('Factory', models.CharField(blank=True, max_length=100, null=True, verbose_name='组件厂家')),
                ('Model', models.CharField(blank=True, max_length=30, null=True, verbose_name='组件型号')),
                ('Logo', models.CharField(blank=True, max_length=100, null=True, verbose_name='组件商标')),
                ('function', models.CharField(blank=True, max_length=200, null=True, verbose_name='组件功能')),
                ('picUrl', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/devSample/', verbose_name='组件外观图像路径')),
                ('note', models.CharField(blank=True, max_length=500, null=True, verbose_name='备注')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置关键组件样本基本信息表',
                'verbose_name_plural': '爆炸装置关键组件样本基本信息表',
            },
        ),
        migrations.CreateModel(
            name='devShapeSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('mrfs', models.CharField(blank=True, max_length=30, null=True, verbose_name='厂家')),
                ('sampleModel', models.CharField(blank=True, max_length=20, null=True, verbose_name='型号')),
                ('trademark', models.CharField(blank=True, max_length=30, null=True, verbose_name='商标')),
                ('function', models.CharField(blank=True, max_length=100, null=True, verbose_name='所属装置')),
                ('isFirst', models.BooleanField(default=True, verbose_name='是否是第一次分割')),
                ('rectCoordi', models.CharField(blank=True, max_length=100, null=True, verbose_name='矩形框坐标（4个）')),
                ('proCoordi', models.CharField(blank=True, max_length=400, null=True, verbose_name='前景颜色点坐标')),
                ('backCoordi', models.CharField(blank=True, max_length=400, null=True, verbose_name='背景颜色点坐标')),
                ('boardCoordi', models.CharField(blank=True, max_length=400, null=True, verbose_name='主板颜色点坐标')),
                ('blackWhiteUrl', models.ImageField(blank=True, null=True, upload_to='', verbose_name='黑白图像路径')),
                ('interColorUrl', models.ImageField(blank=True, null=True, upload_to='', verbose_name='中间彩色图像路径')),
                ('middleResultUrl', models.FileField(blank=True, null=True, upload_to='', verbose_name='第一次文件路径')),
                ('compCheckCoordi', models.CharField(blank=True, max_length=400, null=True, verbose_name='元器件点坐标（校验）')),
                ('boardCheckCoordi', models.CharField(blank=True, max_length=400, null=True, verbose_name='主板像素坐标（校验）')),
                ('featureUrl', models.FileField(blank=True, null=True, upload_to='', verbose_name='特征文件路径')),
                ('resultPicUrl', models.ImageField(blank=True, null=True, upload_to='', verbose_name='结果图像形式路径')),
                ('resultFileUrl', models.FileField(blank=True, null=True, upload_to='', verbose_name='结果文件形式路径')),
                ('originalUrl', models.ImageField(blank=True, null=True, upload_to='image/devShapeSample/original/', verbose_name='原始图像文件路径')),
                ('originalResolution', models.CharField(blank=True, max_length=30, null=True, verbose_name='原始图像采集分辨率')),
                ('nomUrl', models.ImageField(blank=True, null=True, upload_to='image/devShapeSample/nom/', verbose_name='归一化图像文件路径')),
                ('nomResolution', models.CharField(blank=True, max_length=30, null=True, verbose_name='归一化图像分辨率')),
                ('note', models.CharField(blank=True, max_length=200, null=True, verbose_name='备注')),
                ('devPartSample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devShapeSample', to='sample.devPartSample', verbose_name='所属零件')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置常见样本形态表',
                'verbose_name_plural': '爆炸装置常见样本形态表',
            },
        ),
        migrations.CreateModel(
            name='exploSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sname', models.CharField(max_length=30, verbose_name='样本名称')),
                ('snameAbbr', models.CharField(blank=True, max_length=20, null=True, verbose_name='样本名称缩写')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('sampleOrigin', models.CharField(blank=True, max_length=100, null=True, verbose_name='样本产地')),
                ('factory', models.CharField(blank=True, max_length=100, null=True, verbose_name='样本厂家')),
                ('picUrl', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/exploSample/', verbose_name='炸药外观图片路径')),
                ('note', models.CharField(blank=True, max_length=200, null=True, verbose_name='备注')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '炸药及原材料常见样本表',
                'verbose_name_plural': '炸药及原材料常见样本表',
            },
        ),
        migrations.CreateModel(
            name='exploSampleFTIR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('exploSample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploSampleFTIR', to='sample.exploSample', verbose_name='对应的炸药样本')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '炸药及原材料样本FTIR检测表',
                'verbose_name_plural': '炸药及原材料样本FTIR检测表',
            },
        ),
        migrations.CreateModel(
            name='exploSampleFTIRTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txtURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/exploSampleFTIRTestFile/', verbose_name='录入TXT文档路径')),
                ('txtHandledURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='处理过的TXT文档路径')),
                ('exploSampleFTIR', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploSampleFTIRTestFile', to='sample.exploSampleFTIR', verbose_name='对应的FTIR检测')),
            ],
            options={
                'verbose_name': '炸药及原材料样本FTIR检测表',
                'verbose_name_plural': '炸药及原材料样本FTIR检测表',
            },
        ),
        migrations.CreateModel(
            name='exploSampleGCMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('exploSample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploSampleGCMS', to='sample.exploSample', verbose_name='对应的炸药样本')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '炸药及原材料样本GC-MS检测表',
                'verbose_name_plural': '炸药及原材料样本GC-MS检测表',
            },
        ),
        migrations.CreateModel(
            name='exploSampleGCMSTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='TIC', max_length=20, verbose_name='类型（TIC。。。）')),
                ('txtURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/exploSampleGCMSTestFile/', verbose_name='录入TXT文档路径')),
                ('txtHandledURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='处理过的TXT文档路径')),
                ('exploSampleGCMS', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploSampleGCMSTestFile', to='sample.exploSampleGCMS', verbose_name='对应的GC-MS检测')),
            ],
            options={
                'verbose_name': '炸药及原材料样本GC-MS检测实验文件表 ',
                'verbose_name_plural': '炸药及原材料样本GC-MS检测实验文件表 ',
            },
        ),
        migrations.CreateModel(
            name='exploSampleRaman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('exploSample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploSampleRaman', to='sample.exploSample', verbose_name='对应的炸药样本')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '炸药及原材料样本Raman检测表',
                'verbose_name_plural': '炸药及原材料样本Raman检测表',
            },
        ),
        migrations.CreateModel(
            name='exploSampleRamanTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txtURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/exploSampleRamanTestFile/', verbose_name='录入TXT文档路径')),
                ('txtHandledURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='处理过的TXT文档路径')),
                ('exploSampleRaman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploSampleRamanTestFile', to='sample.exploSampleRaman', verbose_name='对应的Raman检测')),
            ],
            options={
                'verbose_name': '炸药及原材料样本Raman检测实验文件表 ',
                'verbose_name_plural': '炸药及原材料样本Raman检测实验文件表 ',
            },
        ),
        migrations.CreateModel(
            name='exploSampleXRD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('exploSample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploSampleXRD', to='sample.exploSample', verbose_name='对应的炸药样本')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '炸药及原材料样本XRD检测表',
                'verbose_name_plural': '炸药及原材料样本XRD检测表',
            },
        ),
        migrations.CreateModel(
            name='exploSampleXRDTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txtURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/exploSampleXRDTestFile/', verbose_name='录入TXT文档路径')),
                ('txtHandledURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='处理过的TXT文档路径')),
                ('exploSampleXRD', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploSampleXRDTestFile', to='sample.exploSampleXRD', verbose_name='对应的XRD检测')),
            ],
            options={
                'verbose_name': '炸药及原材料样本XRD检测实验文件表 ',
                'verbose_name_plural': '炸药及原材料样本XRD检测实验文件表 ',
            },
        ),
        migrations.CreateModel(
            name='exploSampleXRF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('devDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.devDetect', verbose_name='对应的检测设备')),
                ('exploSample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploSampleXRF', to='sample.exploSample', verbose_name='对应的炸药样本')),
                ('methodDetect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.methodDetect', verbose_name='对应的检测方法')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '炸药及原材料样本XRF检测表',
                'verbose_name_plural': '炸药及原材料样本XRF检测表',
            },
        ),
        migrations.CreateModel(
            name='exploSampleXRFTestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('excelURL', models.FileField(blank=True, max_length=300, null=True, upload_to='file/exploSampleXRFTestFile/', verbose_name='录入excel文档路径')),
                ('miningList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Mining元素列表')),
                ('pnpList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plastics Non PVC元素列表')),
                ('ppList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Plastics PVC元素列表')),
                ('gmList', models.CharField(blank=True, max_length=300, null=True, verbose_name='General Metals元素列表')),
                ('soilList', models.CharField(blank=True, max_length=300, null=True, verbose_name='Soil元素列表')),
                ('tagList', models.CharField(blank=True, max_length=300, null=True, verbose_name='TestAll Geo元素列表')),
                ('exploSampleXRF', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploSampleXRFTestFile', to='sample.exploSampleXRF', verbose_name='对应的XRF检测')),
            ],
            options={
                'verbose_name': '炸药及原材料样本XRF检测实验文件表',
                'verbose_name_plural': '炸药及原材料样本XRF检测实验文件表',
            },
        ),
        migrations.CreateModel(
            name='logoImgSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('sampleType', models.IntegerField(choices=[(1, '外壳'), (2, '零件'), (3, '电路板'), (4, 'Logo')], default=4, help_text='零件类型（1-4，外壳，零件，电路板，Logo）', verbose_name='零件类型（1-4，外壳，零件，电路板，Logo）')),
                ('rectCoordi', models.CharField(blank=True, max_length=50, null=True, verbose_name='矩形框坐标（4个）')),
                ('fgCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='前景颜色点坐标')),
                ('bgCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='背景颜色点坐标')),
                ('boardCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='主板颜色点坐标')),
                ('markImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='', verbose_name='PCB区域标记图像文件路径 ')),
                ('compCheckCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='元器件点坐标（校验）')),
                ('boardCheckCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='主板像素坐标（校验）')),
                ('featureUrl', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='特征文件路径')),
                ('srcImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/logoImgSample/original/', verbose_name='原始图像文件路径')),
                ('sResolution', models.IntegerField(blank=True, null=True, verbose_name='原始图像采集分辨率')),
                ('norImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/logoImgSample/nom/', verbose_name='归一化图像文件路径')),
                ('nResolution', models.IntegerField(blank=True, null=True, verbose_name='归一化图像分辨率')),
                ('note', models.CharField(blank=True, max_length=500, null=True, verbose_name='备注')),
                ('devPartSample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logoImgSample', to='sample.devPartSample', verbose_name='所属零件')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': ' 爆炸装置关键组件样本商标Logo图像表',
                'verbose_name_plural': ' 爆炸装置关键组件样本商标Logo图像表',
            },
        ),
        migrations.CreateModel(
            name='oPartImgSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('sampleType', models.IntegerField(choices=[(1, '外壳'), (2, '零件'), (3, '电路板'), (4, 'Logo')], default=1, help_text='零件类型（1-4，外壳，零件，电路板，Logo）', verbose_name='零件类型（1-4，外壳，零件，电路板，Logo）')),
                ('sampleSide', models.IntegerField(choices=[(1, '正面'), (2, '反面'), (3, '3面'), (4, '4面'), (5, '5面'), (6, '6面')], default=1, help_text='零件是哪个面（1-6；1为正面，2为反面）', verbose_name='零件是哪个面（1-6；1为正面，2为反面）')),
                ('rectCoordi', models.CharField(blank=True, max_length=50, null=True, verbose_name='矩形框坐标（4个）')),
                ('fgCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='前景颜色点坐标')),
                ('bgCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='背景颜色点坐标')),
                ('boardCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='主板颜色点坐标')),
                ('markImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='', verbose_name='PCB区域标记图像文件路径 ')),
                ('compCheckCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='元器件点坐标（校验）')),
                ('boardCheckCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='主板像素坐标（校验）')),
                ('featureUrl', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='特征文件路径')),
                ('srcImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/oPartImgSample/original/', verbose_name='原始图像文件路径')),
                ('sResolution', models.IntegerField(blank=True, null=True, verbose_name='原始图像采集分辨率')),
                ('norImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/oPartImgSample/nom/', verbose_name='归一化图像文件路径')),
                ('nResolution', models.IntegerField(blank=True, null=True, verbose_name='归一化图像分辨率')),
                ('note', models.CharField(blank=True, max_length=500, null=True, verbose_name='备注')),
                ('devPartSample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oPartImgSample', to='sample.devPartSample', verbose_name='所属零件')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置关键组件样本其它零件图像（也包括组件外壳）表',
                'verbose_name_plural': '爆炸装置关键组件样本其它零件图像（也包括组件外壳）表',
            },
        ),
        migrations.CreateModel(
            name='PCBImgSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='录入日期')),
                ('sampleType', models.IntegerField(choices=[(1, '外壳'), (2, '零件'), (3, '电路板'), (4, 'Logo')], default=3, help_text='零件类型（1-4，外壳，零件，电路板，Logo）', verbose_name='零件类型（1-4，外壳，零件，电路板，Logo）')),
                ('sampleSide', models.IntegerField(choices=[(1, '正面'), (2, '反面')], default=1, help_text='电路板是哪个面（1-2；1为正面）', verbose_name='电路板是哪个面（1-2；1为正面）')),
                ('rectCoordi', models.CharField(blank=True, max_length=50, null=True, verbose_name='矩形框坐标（4个）')),
                ('fgCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='前景颜色点坐标')),
                ('bgCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='背景颜色点坐标')),
                ('boardCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='主板颜色点坐标')),
                ('markImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='', verbose_name='PCB区域标记图像文件路径 ')),
                ('compCheckCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='元器件点坐标（校验）')),
                ('boardCheckCoordi', models.CharField(blank=True, max_length=300, null=True, verbose_name='主板像素坐标（校验）')),
                ('featureUrl', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='特征文件路径')),
                ('isFirst', models.BooleanField(default=True, verbose_name='是否是第一次分割')),
                ('componentSegURL', models.FileField(blank=True, max_length=300, null=True, upload_to='', verbose_name='元器件分割结果文件路径')),
                ('srcImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/PCBImgSample/original/', verbose_name='原始图像文件路径')),
                ('sResolution', models.IntegerField(blank=True, null=True, verbose_name='原始图像采集分辨率')),
                ('norImgURL', models.ImageField(blank=True, max_length=300, null=True, upload_to='image/devShapeSample/nom/', verbose_name='归一化图像文件路径')),
                ('nResolution', models.IntegerField(blank=True, null=True, verbose_name='归一化图像分辨率')),
                ('note', models.CharField(blank=True, max_length=500, null=True, verbose_name='备注')),
                ('devPartSample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PCBImgSample', to='sample.devPartSample', verbose_name='所属零件')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员')),
            ],
            options={
                'verbose_name': '爆炸装置关键组件样本电路板图像表',
                'verbose_name_plural': '爆炸装置关键组件样本电路板图像表',
            },
        ),
        migrations.AddField(
            model_name='devpartsample',
            name='devSample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devPartSample', to='sample.devSample', verbose_name='所属组件'),
        ),
        migrations.AddField(
            model_name='devpartsample',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='处理人员'),
        ),
        migrations.AddField(
            model_name='devpartramantestfile',
            name='devPartSampleRaman',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devPartRamanTestFile', to='sample.devPartSampleRaman', verbose_name='对应的Raman检测'),
        ),
    ]
